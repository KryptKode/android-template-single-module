apply plugin: 'com.onesignal.androidsdk.onesignal-gradle-plugin'
apply plugin: 'com.android.application'
apply plugin: 'com.google.android.gms.oss-licenses-plugin'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.kryptkode.template"
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary true
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation":
                                     "$projectDir/schemas".toString()]
            }
        }

        manifestPlaceholders = [
                onesignal_app_id               : 'c93d908f-cab2-4d89-ab07-9df52c0384a7',
                // Project number pulled from dashboard, local value is ignored.
                onesignal_google_project_number: 'REMOTE'
        ]

        buildConfigField 'String', 'BASE_URL', '"http://api.wish3.xyz/api/api/public/"'
        buildConfigField 'String', 'IMAGE_URL', '"http://api.wish3.xyz/api/admin/"'
    }

    sourceSets {
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    dataBinding {
        enabled true
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
    dexOptions {
        javaMaxHeapSize "4g"
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.viewpager2:viewpager2:1.0.0'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'


    def lifeCycleVersion = "2.2.0"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifeCycleVersion"
    implementation "androidx.lifecycle:lifecycle-runtime:$lifeCycleVersion"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifeCycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:${lifeCycleVersion}"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:${lifeCycleVersion}"

    def fragment = "1.2.2"
    implementation "androidx.fragment:fragment-ktx:${fragment}"
    implementation "androidx.fragment:fragment:${fragment}"

    //Navigation
    implementation 'androidx.navigation:navigation-fragment:2.2.1'
    implementation 'androidx.navigation:navigation-ui:2.2.1'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.2.1'
    implementation 'androidx.navigation:navigation-ui-ktx:2.2.1'


    /*Do not update retrofit this version is required to support minSdkVersion < API 21*/
    def retrofitVersion = "2.6.0"
    def okhttp3Logging = "3.9.0"
    def moshiVersion = "1.9.2"
    implementation "com.squareup.moshi:moshi:$moshiVersion"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshiVersion"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofitVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp3Logging"


    //Room -DB
    def roomVersion = "2.2.4"
    implementation "androidx.room:room-runtime:${roomVersion}"
    implementation "androidx.room:room-ktx:${roomVersion}"
    kapt "androidx.room:room-compiler:${roomVersion}"

    implementation "com.jakewharton.timber:timber:4.7.1"

    //Image loading
    implementation "io.coil-kt:coil:0.9.5"
    implementation "io.coil-kt:coil-gif:0.9.5"

    //google
    implementation 'com.google.android.gms:play-services-ads:19.0.0'
    implementation 'com.google.firebase:firebase-core:17.2.3'
    implementation 'com.google.android.gms:play-services-oss-licenses:17.0.0'
    implementation 'com.google.android.play:core:1.6.5'
    implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'

    //groupie
    def groupieVersion = "2.7.0"
    implementation "com.xwray:groupie:$groupieVersion"
    implementation "com.xwray:groupie-kotlin-android-extensions:$groupieVersion"
    implementation "com.xwray:groupie-databinding:$groupieVersion"


//    implementation 'com.onesignal:OneSignal:3.12.4'

    //permissions
    def permission_dispatcher = "4.6.0"
    implementation "org.permissionsdispatcher:permissionsdispatcher:$permission_dispatcher"
    kapt "org.permissionsdispatcher:permissionsdispatcher-processor:$permission_dispatcher"

    //secure shared preferences
    implementation 'com.scottyab:secure-preferences-lib:0.1.7'

    //dagger
    def daggerVersion = "2.25.4"
    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"

    androidTestImplementation "androidx.room:room-testing:$roomVersion"

    testImplementation 'junit:junit:4.13'
    testImplementation "io.mockk:mockk:1.9.3"
    testImplementation "com.google.truth:truth:1.0.1"
    testImplementation "androidx.room:room-testing:$roomVersion"
    testImplementation "org.robolectric:robolectric:4.3.1"
    testImplementation "android.arch.core:core-testing:1.1.1"
    testImplementation "androidx.test:core:1.2.0"

    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    debugImplementation "com.amitshekhar.android:debug-db:1.0.6"
    debugImplementation "com.squareup.leakcanary:leakcanary-android:2.1"

    // Chuck
    dependencies {
        def chuckVersion = "1.1.0"
        debugImplementation "com.readystatesoftware.chuck:library:${chuckVersion}"
        releaseImplementation "com.readystatesoftware.chuck:library-no-op:${chuckVersion}"
    }
}

apply plugin: 'com.google.gms.google-services'
